{"version":3,"sources":["components/PersonalInfo.js","components/Address.js","components/ToggleButton.js","components/Terms.js","components/SubmitButton.js","components/Modal.js","App.js","credential/apiKey.js","index.js"],"names":["PersonalInfo","countryList","updateData","useState","callingCodes","selectedCountry","setSelectedCountry","handleName","e","target","name","value","className","htmlFor","type","id","placeholder","required","onBlur","onChange","countryName","country","find","el","map","phoneNumber","Address","handleChange","ToggleButton","label","handleCheckBox","Term","checked","SubmitButton","buttonEnable","setButtonEnable","disabled","Modal","data","modalDisplayed","setModalDisplayed","firstName","lastName","address","province","subscriptionSms","subscriptionEmail","subscriptionMailing","onClick","App","setData","setCountryList","fetchCountry","a","url","fetch","mode","answer","json","list","result","newObj","flag","alpha2Code","useEffect","onSubmit","preventDefault","Terms","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8f128a2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst PersonalInfo = ({ countryList, updateData }) => {\n  const [selectedCountry, setSelectedCountry] = useState({\n    callingCodes: \"000\",\n  });\n\n  const handleName = (e) => {\n    updateData(e.target.name, e.target.value);\n  };\n\n  const handleSelect = (e) => {\n    const countryName = e.target.value;\n    const country = countryList.find((el) => el.name === countryName);\n    setSelectedCountry(country);\n  };\n\n  const handlePhone = (e) => {\n    const phoneNumber = `${selectedCountry.callingCodes}${e.target.value}`;\n    updateData(\"phoneNumber\", phoneNumber);\n  };\n\n  return (\n    <section className=\"personal\">\n      <header>\n        <h3 className=\"personal__header\">Create new account</h3>\n      </header>\n      <main className=\"grid6\">\n        <label htmlFor=\"last-name\" className=\"personal__last-name\">\n          Last name\n          <br />\n          <input\n            type=\"text\"\n            id=\"last-name\"\n            name=\"lastName\"\n            placeholder=\"Last Name\"\n            required\n            onBlur={handleName}\n          />\n        </label>\n        <label htmlFor=\"first-name\" className=\"personal__first-name\">\n          First Name\n          <br />\n          <input\n            type=\"text\"\n            id=\"first-name\"\n            name=\"firstName\"\n            placeholder=\"First Name\"\n            required\n            onBlur={handleName}\n          />\n        </label>\n        {/* </div> */}\n        <label htmlFor=\"phone\" className=\"personal__phone\">\n          Mobile Phone Number\n          <div className=\"mobile-phone\">\n            <select\n              name=\"phone-country\"\n              onChange={handleSelect}\n              className=\"mobile-phone__country\"\n              required\n            >\n              {countryList.map((country) => (\n                <option value={country.name}>\n                  {/* <img\n                src={`../country-flags-main/png100px/${country.alpha2Code}.png`}\n                alt=\"flag\"\n              /> */}\n                  {country.name}\n                </option>\n              ))}\n            </select>\n            <span className=\"mobile-phone__code\">\n              +{selectedCountry.callingCodes}\n            </span>\n            <input\n              type=\"number\"\n              id=\"phone\"\n              name=\"phone\"\n              placeholder=\"Mobile phone number\"\n              required\n              className=\"mobile-phone__input\"\n              onBlur={handlePhone}\n            />\n          </div>\n        </label>\n      </main>\n    </section>\n  );\n};\n\nexport default PersonalInfo;\n","import React from \"react\";\n\nconst Address = ({ countryList, updateData }) => {\n  const handleChange = (e) => {\n    updateData(e.target.name, e.target.value);\n  };\n\n  return (\n    <section className=\"address\">\n      <header>\n        <h3>Address</h3>\n      </header>\n      <main className=\"grid6\">\n        <label htmlFor=\"address\" className=\"address__address\">\n          Address\n          <input\n            type=\"text\"\n            name=\"address\"\n            id=\"address\"\n            placeholder=\"Address\"\n            onBlur={handleChange}\n          />\n        </label>\n        <label htmlFor=\"country\" className=\"address__country\">\n          Country\n          <select name=\"country\" onChange={handleChange} required>\n            {countryList.map((country) => (\n              <option value={country.name}>{country.name}</option>\n            ))}\n          </select>\n        </label>\n        <label htmlFor=\"province\" className=\"address__province\">\n          Province/District\n          <input\n            type=\"text\"\n            name=\"province\"\n            id=\"province\"\n            placeholder=\"Province/District\"\n          />\n        </label>\n      </main>\n    </section>\n  );\n};\n\nexport default Address;\n","import React from \"react\";\n\nconst ToggleButton = ({ name, label, handleCheckBox }) => (\n  <div>\n    <p>{label}</p>\n    <label htmlFor={name} className=\"switch\">\n      <input\n        type=\"checkbox\"\n        className=\"switch__input\"\n        id={name}\n        name={name}\n        onBlur={handleCheckBox}\n      />\n      <span className=\"switch__slider\" />\n    </label>\n  </div>\n);\n\nexport default ToggleButton;\n","import React from \"react\";\nimport ToggleButton from \"./ToggleButton\";\n\nconst Term = ({ updateData }) => {\n  const handleCheckBox = (e) => {\n    const { name, checked } = e.target;\n    updateData(name, checked);\n  };\n\n  return (\n    <section className=\"terms\">\n      <header>\n        <h3>Standard Privacy Notice</h3>\n      </header>\n      <main>\n        <p className=\"terms__paragraph\">\n          I warrant that the above information are true and correct\n        </p>\n        <p className=\"terms__paragraph\">\n          I want to receive information from L&apos;OCCITAINE\n        </p>\n        <div className=\"terms__btn-container\">\n          <ToggleButton\n            name=\"subscriptionSms\"\n            label=\"SMS & Mobile Call\"\n            handleCheckBox={handleCheckBox}\n          />\n          <ToggleButton\n            name=\"subscriptionEmail\"\n            label=\"Email\"\n            handleCheckBox={handleCheckBox}\n          />\n          <ToggleButton\n            name=\"subscriptionMailing\"\n            label=\"Mailing\"\n            handleCheckBox={handleCheckBox}\n          />\n        </div>\n        <p className=\"terms__tooltip\">Subscribe to SMS & mobile call.</p>\n      </main>\n    </section>\n  );\n};\n\nexport default Term;\n","import React, { useState } from \"react\";\n\nconst SubmitButton = () => {\n  const [buttonEnable, setButtonEnable] = useState(false);\n\n  const handleChange = (e) => {\n    setButtonEnable(e.target.checked);\n  };\n  return (\n    <section className=\"submit\">\n      <label htmlFor=\"user-agreement\" className=\"submit__check-box\">\n        <input\n          type=\"checkbox\"\n          id=\"user-agreement\"\n          name=\"user-agreement\"\n          onChange={handleChange}\n        />\n        <span>I have read and understood the above terms and conditions</span>\n      </label>\n      <button type=\"submit\" className=\"submit__btn\" disabled={!buttonEnable}>\n        Create Customer\n      </button>\n    </section>\n  );\n};\n\nexport default SubmitButton;\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React from \"react\";\n\nconst Modal = ({ data, modalDisplayed, setModalDisplayed }) => {\n  const toggleDisplayed = () => setModalDisplayed(!modalDisplayed);\n  const {\n    firstName,\n    lastName,\n    phoneNumber,\n    address,\n    country,\n    province,\n    subscriptionSms,\n    subscriptionEmail,\n    subscriptionMailing,\n  } = data;\n  if (modalDisplayed)\n    return (\n      <div className=\"modal\">\n        <div className=\"modal__inner-container\">\n          <p>\n            Full name: {firstName} {lastName}\n          </p>\n          <p>Phone Number: {phoneNumber}</p>\n          <p>Address: {address}</p>\n          <p>Province: {province}</p>\n          <p>Country: {country}</p>\n          <p>\n            Subscription: {subscriptionSms && \"SMS & Mobile Call, \"}\n            {subscriptionEmail && \"Email, \"} {subscriptionMailing && \"Mailing\"}\n          </p>\n          <p>{subscriptionEmail}</p>\n          <button\n            type=\"button\"\n            onClick={toggleDisplayed}\n            className=\"modal__close-btn\"\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    );\n  return false;\n};\n\nexport default Modal;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nimport PersonalInfo from \"./components/PersonalInfo\";\nimport Address from \"./components/Address\";\n// import Contacts from \"./components/Contacts\";\nimport Terms from \"./components/Terms\";\nimport SubmitButton from \"./components/SubmitButton\";\nimport Modal from \"./components/Modal\";\nimport API_KEY from \"./credential/apiKey\";\n\nfunction App() {\n  const [data, setData] = useState({});\n  const [modalDisplayed, setModalDisplayed] = useState(false);\n  const [countryList, setCountryList] = useState([{ name: \"loading country\" }]);\n\n  const fetchCountry = async () => {\n    const url = `http://api.countrylayer.com/v2/all?access_key=${API_KEY}`;\n    const answer = await fetch(url, { mode: \"cors\" });\n    const list = await answer.json();\n    const result = list.map((el) => {\n      const newObj = {};\n      newObj.name = el.name;\n      newObj.callingCodes = el.callingCodes;\n      newObj.flag = el.flag;\n      newObj.alpha2Code = el.alpha2Code;\n      return newObj;\n    });\n    return result;\n  };\n\n  useEffect(async () => {\n    const list = await fetchCountry();\n    setCountryList(list);\n  }, []);\n\n  const updateData = (name, value) => {\n    setData({ ...data, ...{ [name]: value } });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // setModalDisplayed(false);\n    setModalDisplayed(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={handleSubmit}>\n        <PersonalInfo countryList={countryList} updateData={updateData} />\n        <Address countryList={countryList} updateData={updateData} />\n        {/* <Contacts data={data} setData={setData} /> */}\n        <Terms updateData={updateData} />\n        <SubmitButton />\n        <Modal\n          modalDisplayed={modalDisplayed}\n          setModalDisplayed={setModalDisplayed}\n          data={data}\n        />\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","const API_KEY = \"60133c89a9e1189f17d01adc279731cf\";\n\nexport default API_KEY;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}